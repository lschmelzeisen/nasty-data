[metadata]
name = opamin
project_urls =
    Repository = https://github.com/Institute-Web-Science-and-Technologies/opamin
    Issue Tracker = https://github.com/Institute-Web-Science-and-Technologies/opamin/issues
author = Lukas Schmelzeisen
author_email = me@lschmelzeisen.com
classifiers =
    Development Status :: 3 - Alpha
    Environment :: Console
    Intended Audience :: Science/Research
    License :: OSI Approved :: Apache Software License
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: Implementation :: PyPy
    Topic :: Scientific/Engineering
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Typing :: Typed
license = Apache License, Version 2.0
license_file = LICENSE
description = Open Argument Mining
long_description = file: README.rst
long_description_content_type = text/x-rst

[options]
zip_safe = True
setup_requires =
    setuptools_scm[toml]~=3.4
install_requires =
    elasticsearch~=7.5
    elasticsearch-dsl~=7.1
    overrides~=2.8
    requests~=2.23
    toml~=0.10
    tqdm~=4.43
    typing-extensions~=3.7
    zstandard~=0.13
python_requires = >=3.7
include_package_data = True
packages = find:

[options.extras_require]
test =
    coverage[toml]~=5.0
    pytest~=5.3
    pytest-cov~=2.8
    pytest-html~=2.0
dev =
    autoflake~=1.3
    black==19.10b0
    flake8~=3.7
    flake8-bandit~=2.1
    flake8-bugbear~=20.1
    flake8-builtins~=1.4
    flake8-comprehensions~=3.2
    flake8-eradicate~=0.2
    flake8-print~=3.1
    flake8-pyi~=19.3
    isort[pyproject]~=4.3
    licenseheaders~=0.8
    mypy~=0.761
    pep8-naming~=0.9
    tox~=3.14
    twine~=3.1
    vulture~=1.3

[options.entry_points]
console_scripts =
    opamin = opamin.cli.main:main

[options.packages.find]
exclude = tests*

[flake8]
# required for Black compatibility
max-line-length = 88
# flake8-mccabe
max-complexity = 10
select =
    # pycodestyle / flake8-eradicate
    E
    W
    # flake8
    F
    # flake8-mccabe / flake8-comprehensions
    C
    # flake8-builtins
    A
    # flake8-bugbear / flake8-bandit
    B
    # flake8-pyi
    Y
    # flake8-print
    T
    # pep8-naming
    N
ignore =
    # required for Black compatibility
    E203
    W503
    # disable class-attributes overlapping with builtins
    A003
per-file-ignores =
    # Black formats stub files differently
    stubs/*:E301,E302,E305,E701,E704,W504
    # Allow vulture's whitelist syntax
    vulture-whitelist.py:F821

[mypy]
mypy_path = ./stubs
python_version = 3.7
platform = linux
pretty = True

; -- Disallow dynamic typing ---------------------------------------------------
disallow_any_unimported = True
; Sadly, I don't know how to type decorators when enabling the next three.
;disallow_any_expr = True
;disallow_any_decorated = True
;disallow_any_explicit = True
disallow_any_generics = True
disallow_subclassing_any = True

; -- Untyped definitions and calls ---------------------------------------------
disallow_untyped_calls = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True

; -- None and Optional handling ------------------------------------------------
no_implicit_optional = True
strict_optional = True

; -- Configuring warnings ------------------------------------------------------
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_return_any = True
warn_unreachable = True

; -- Miscellaneous strictness flags --------------------------------------------
allow_redefinition = True
implicit_reexport = False
strict_equality = True

; -- Miscellaneous -------------------------------------------------------------
error_summary = False
warn_unused_configs = True

; Make opamin/__init__.py pass check if generated version.py is present or not.
[mypy-opamin]
ignore_missing_imports = True
warn_unused_ignores = False

; Ignore code that has not been correctly type-annotated yet.
[mypy-opamin.commands.*]
ignore_errors = True
[mypy-opamin.data.*]
ignore_errors = True
[mypy-opamin.util.*]
ignore_errors = True

; Ignore vulture's generated whitelist
[mypy-vulture-whitelist]
ignore_errors = True

[tool:pytest]
testpaths = tests
